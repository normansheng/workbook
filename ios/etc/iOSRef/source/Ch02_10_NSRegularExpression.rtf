{\rtf1\ansi\ansicpg932\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset128 HiraKakuProN-W3;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10640\viewh13700\viewkind0
\deftab720
\pard\tx0\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\f0\fs24 \cf0 \
#pragma mark -enumerateMatchesInString:options:range:usingBlock:\
-(void)method001\
\{\
    NSError *aError = nil;\
	NSString *str = @"http://www.oomori.com?name=oomori&age=44";\
    NSRegularExpression *regExp = [NSRegularExpression regularExpressionWithPattern:@"([\\\\w]+)=([\\\\w]+)" \
                                                                            options:NSRegularExpressionCaseInsensitive\
                                                                              error:&aError];\
     __block NSMutableDictionary *muDic =  [NSMutableDictionary dictionaryWithCapacity:0];\
    [regExp enumerateMatchesInString:str \
                             options:NSMatchingReportProgress \
                               range:NSMakeRange(0,[str length]) \
                          usingBlock:\
     ^(NSTextCheckingResult *result ,NSMatchingFlags flags,BOOL *stop )\
     \{\
         if (!(flags & NSMatchingProgress)) \{\
             NSString *aKey = [str substringWithRange:[result rangeAtIndex:1]];\
             NSString *aValue = [str substringWithRange:[result rangeAtIndex:2]];\
             [muDic setObject:aValue forKey:aKey];\
         \}\
     \}\
     \
     ];\
    NSLog(@"%s%@",__FUNCTION__,[muDic description]);\
    //=>-[OOOAppDelegate method001]\{age = 44;name = oomori;\}\
\}\
\
\
\
\
\
\pard\tx0\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab640\pardirnatural
\cf0 #pragma mark NSRegularExpression  regularExpressionWithPattern:\
-(void)method003\
\{\
    \
	NSString *str = @"abcdefg555hijklmn8972opqrstu";\
    NSRegularExpression *regExp = [NSRegularExpression regularExpressionWithPattern:@"\\\\d+" options:NSRegularExpressionCaseInsensitive error:nil];\
    NSArray *resultArray = [regExp matchesInString:str\
                                                options:0\
                                                  range:NSMakeRange(0, [str length])];\
    \
    [resultArray enumerateObjectsWithOptions:NSEnumerationConcurrent //\'95\'c0\'97\'f1\
                              usingBlock:^(id obj,NSUInteger idx,BOOL *stop)\{\
                                  NSTextCheckingResult *tcResult = (NSTextCheckingResult *)obj;\
                                  NSLog(@"%s %@ %u-%u",__FUNCTION__,tcResult.regularExpression,tcResult.range.location,tcResult.range.length );\
                                  return;\
                                  \
                              \}];\
    //=><NSRegularExpression: 0x6d4e7c0> \\d+ 0x1 7-3\
    //=><NSRegularExpression: 0x6d4e7c0> \\d+ 0x1 17-4\
    \
\}\
\
\
\
\
#pragma mark NSRegularExpression  stringByReplacingMatchesInString:\
-(void)method009\
\{\
    \
	NSError* error = nil;\
    NSRegularExpression* regularExpression = [NSRegularExpression\
                                  regularExpressionWithPattern:@"\\\\b[1-3]\\\\b"\
                                  options:NSRegularExpressionCaseInsensitive\
                                  error:&error];\
\
    NSString* aString = @"1  2  3";\
    \
    NSMutableString* mutableString = [aString mutableCopy];\
    NSInteger offset = 0;\
    \
    for (NSTextCheckingResult* result in [regularExpression matchesInString:aString\
                                                        options:0\
                                                          range:NSMakeRange(0, [aString length])]) \{\
        \
        NSRange resultRange = [result range];\
        resultRange.location += offset; \
        NSString* match = [regularExpression replacementStringForResult:result\
                                                   inString:mutableString\
                                                     offset:offset\
                                                   template:@"$0"];\
        NSString* replacement;\
        if ([match isEqualToString:@"1"]) \{\
            replacement = @"Jan";\
        \} else if ([match isEqualToString:@"2"]) \{\
            replacement = @"Feb";\
        \} else if ([match isEqualToString:@"3"]) \{\
            replacement = @"Mar";\
        \}\
        \
        [mutableString replaceCharactersInRange:resultRange withString:replacement];\
        \
        offset += ([replacement length] - resultRange.length);\
    \}\
    \
    NSLog(@"%s %@",__FUNCTION__,mutableString  );\
    //=>\
    \
\}\
}